/* ---------------------------------
flex
--------------------------------- */
@mixin between($justify:space-between) {
  display: flex;
  justify-content: $justify;
}

/* ---------------------------------
 画像
--------------------------------- */
// imgタグを使う際に必ずと言って良い程指定したから、mixinにしてみた。
@mixin img {
    width: 100%;
    height: auto;
    display: block;
}

/* ---------------------------------
 背景画像
--------------------------------- */
// background-urlはvscodeの補完機能を使った方が早くて正確な気がするから指定から外している。
@mixin bg {
  background-repeat: no-repeat;
  background-size: cover;
}

@mixin background($imgpath,$position:0 0,$repeat: no-repeat) {
  background: {
    image: url($imgpath);
    position: $position;
    repeat: $repeat;
  }
}
// .testing {
//   @include background('/my/img/path.png');
// }

/* ---------------------------------
ボーダー
--------------------------------- */
@mixin border-bottom($color:#000) {
  border-bottom: 1px solid $color;
}
// .testing {
//   @include  border-bottom(#000);
// }

/* ---------------------------------
position:absolute;の一括指定
--------------------------------- */
@mixin absolute($top:null, $right:null, $bottom:null, $left:null) {
  position: absolute;

  @if $top != null { // nullでは無く、値が入っている場合
    top: $top;
  }

  @if $right != null {
    right: $right;
  }

  @if $bottom != null {
    bottom: $bottom;
  }

  @if $left != null {
    left: $left;
  }
}
//   p.vertical{
//     @include absolute($top:0, $bottom:0);
//   }

@mixin center {
  position: relative;
  top: 50%;
  text-align: center;
  transform: translateY(-50%);
}

/* ---------------------------------
センタリング absolute
--------------------------------- */
@mixin centering-elements($direction) {
  position: absolute;

  @if $direction==xy {
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }

  @else if $direction==x {
    left: 50%;
    transform: translateX(-50%);
  }

  @else if $direction==y {
    top: 50%;
    transform: translateY(-50%);
  }
}
// .elements01 {
//   @include centering-elements(x);
// }

/* ---------------------------------
縦横比を維持したブロック(padding-topで高さを取る)
--------------------------------- */
@mixin aspect-ratio($width, $height, $image: null) {
  display: block;
  width: 100%;
  height: 0;
  padding-top: ($height / $width) * 100%;

  @if $image != null {
    background: url($image) 50% 50% no-repeat;
    background-size: cover;
  }
}
//   .elements02 {
//     @include aspect-ratio(960, 600, '../example.jpg');
//   }

/* ---------------------------------
擬似要素
--------------------------------- */
@mixin pseudo-element($content: '', $position: absolute, $display: block) {
  position: $position;
  display: $display;
  content: $content;
}
